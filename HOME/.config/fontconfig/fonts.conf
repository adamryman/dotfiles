<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<!--
Run this after updating to update font search cache

# Force re-generation of font cache to update matches after updating config
fc-cache -fv

Figuring this all out was an adventure.
See:

man font.conf
https://eev.ee/blog/2015/05/20/i-stared-into-the-fontconfig-and-the-fontconfig-stared-back-at-me/
http://eosrei.net/articles/2016/02/changing-default-fallback-subsitution-fonts-linux
https://seasonofcode.com/posts/how-to-set-default-fonts-and-font-aliases-on-linux.html

Nice commands

# Print matches in order of preference for "FONT NAME"
# (e.g. "monospace", "serif", "Go Mono", "Inconsolata")
fc-match -s "FONT NAME"

# List all fonts
fc-list

-->
<fontconfig>
	<!--
	// Generic example

	// Alias changes matches for system font searches
	<alias>
		// You specify what font you are aliasing by the family tag
		// The family can be generic, (e.g. monospace, serif, san-serif)
		// Or specific. (e.g. Go Mono, Terminus, Inconsolata)
		<family>Family to Match</family>
		// Prefered fonts win, they match before anything
		<prefer>
			<family>Top of list</family>
			<family>Next on list</family>
			...
		</prefer>

		// The matches from the global configs and actual font names

		// These two I am less sure about but I know they will appear on the list,
		// and not at the top
		// these would be for fallback after all other matched fonts have been tried
		<accept>
			<family>After global matches before default</family>
			...
		</accept>
		<default>
			...
			<family>Bottom of the list</family>
		</default>
	</alias>
	-->
	<alias>
		<!--
		Alias font matches for "Go Mono" to match to "Inconsolata for Powerline",
		if no other font matched for a specific code point.
		-->
		<family>Go Mono</family>
		<accept>
			<family>Inconsolata for Powerline</family>
		</accept>
	</alias>
</fontconfig>
